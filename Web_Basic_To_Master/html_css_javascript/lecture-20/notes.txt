-> what is FlexBox?
- Flexbox (Flexible Box Layout) is a CSS layout model that makes it easy to align, distribute, and organize items in a container, even when their sizes are dynamic.

-> key feature:

* Direction: Items can align in a row or column (flex-direction).

* Alignment: Space items evenly or align them along the main or cross-axis (justify-content, align-items).

* Flexibility: Items can grow, shrink, or stay fixed (flex-grow, flex-shrink, flex-basis).

The Flexbox model is a one-dimensional layout system in CSS that organizes elements along either a main axis (horizontal or vertical) or a cross axis. Here's a quick breakdown of its key concepts:

Main Components of the Flex Model
1. Flex Container:
The parent element where Flexbox is applied (display: flex; or inline-flex;). It controls the layout of its child elements (flex items).

2. Flex Items:
The direct child elements of the flex container, which are arranged and aligned according to Flexbox rules.

Main Concepts
1. Main Axis:
The primary direction in which flex items are placed (default: horizontal row).
Controlled by flex-direction.

row (default): Items are placed left-to-right.
column: Items are placed top-to-bottom.

2. Cross Axis:
The perpendicular axis to the main axis. Controlled by align-items and align-content.

-> flex-wrap in CSS controls whether the flex container allows its items to wrap onto multiple lines when there's not enough space on a single line.

nowrap (default):

All flex items stay on one line, even if they overflow the container.
Example:

display: flex;
flex-wrap: nowrap;

justify-content is a CSS property used in Flexbox and Grid layouts to align items along the main axis (horizontal by default).

Values and Effects:
flex-start (default): Items align at the start of the container.
flex-end: Items align at the end of the container.
center: Items are centered along the main axis.
space-between: Items are spread out, with space between them.
space-around: Items have equal space around them.
space-evenly: Items have equal space between and around them.

Example:
.container {
  display: flex;
  justify-content: space-between;
}
.item {
  width: 50px;
  height: 50px;
  background-color: lightblue;
}
