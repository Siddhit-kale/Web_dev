JavaScript is a programming language used in web development to make websites interactive and dynamic. It runs in the browser and enables features like:

‚úÖ User Interactions ‚Äì Buttons, forms, and real-time updates.
‚úÖ Animations ‚Äì Smooth transitions, image sliders, and effects.
‚úÖ DOM Manipulation ‚Äì Modifying HTML & CSS dynamically.
‚úÖ Asynchronous Operations ‚Äì Fetching data from APIs without reloading the page (AJAX, Fetch API).

It works alongside HTML (structure) and CSS (styling) to create modern web applications. Frameworks like React, Vue, and Angular enhance JavaScript‚Äôs capabilities for building scalable projects.

JavaScript can be used on both the client-side and server-side:

1Ô∏è‚É£ Client-Side JavaScript (Frontend)
Runs in the browser.
Used for interactivity, animations, form validation, and DOM manipulation.
Examples:
React.js (for building UI)
Vanilla JS (basic scripting in browsers)

2Ô∏è‚É£ Server-Side JavaScript (Backend)
Runs on the server using Node.js.
Handles database interactions, authentication, and server logic.
Examples:
Node.js with Express.js (for backend APIs)
Fetching data from MongoDB or Firebase

ECMA, ES6, ES13 ‚Äì What Are They?
1Ô∏è‚É£ ECMA (European Computer Manufacturers Association)

ECMA is an organization that standardizes technologies, including JavaScript.
JavaScript follows the ECMAScript (ES) standard, which defines the core rules and features of the language.

2Ô∏è‚É£ ECMAScript (ES) Versions

ES6 (ECMAScript 2015) ‚Äì A major update introducing features like let, const, arrow functions, promises, template literals, and classes.
ES13 (ECMAScript 2022) ‚Äì A newer version with updates like Object.hasOwn(), top-level await, and new array methods.

Why It Matters?
Each ECMAScript version introduces new features to improve JavaScript, making it more powerful and easier to use. 
Since you're working with React, Node.js, and full-stack projects, using modern ES versions (like ES6+) helps write cleaner, more efficient code. üöÄ

Method 1: Run JavaScript in CMD using Node.js
1Ô∏è‚É£ Install Node.js (if not installed) ‚Üí Download Node.js
2Ô∏è‚É£ Open CMD and check Node.js version:
    node -v 
3Ô∏è‚É£ Run JavaScript directly in CMD:
Type node and press Enter to enter the Node.js REPL (interactive mode).
Then, type JavaScript code like:
    console.log("Hello, JavaScript in CMD!");
or
    node script.js


